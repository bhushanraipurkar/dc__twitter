import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from "../styles/index.module.css"
import IndexPageFeed from '../components/feeds/bunch/IndexPageFeed'
import IndexPageHome from '../components/home/bunch/IndexPageHome'
import { useSession } from 'next-auth/react'
import { useState, useEffect, createContext } from 'react';
import "../typings/user"
import { getUserByEmail } from '../lib/GetUserByEmail'

interface UserContextType {
  users: User | null;
  setUsers: (users: User) => void;
}

const Home: NextPage = () => {

  const UserContext = createContext<UserContextType>({
    users: null,
    setUsers: () => { },
  });

  const [users, setUsers] = useState<User | null>(null);

  const { data: session, status } = useSession();


  useEffect(() => {
    if (session && session.user) {
      const { name, email } = session.user
      fetch(`https://56ad-2409-40c2-1034-30c1-dd01-cc56-9885-1182.in.ngrok.io/user/register` as string, {
        method: 'POST',
        body: JSON.stringify({ name, email }),
        headers: { 'Content-Type': 'application/json' },
      })
        .then((response) => response.json())
        .then((data) => console.log(data))
        .catch((error) => console.error(error))
      const { } = getUserByEmail(email);

    }
  }, [session])
  // console.log(`${process.env.API_LINK}/user/register` as string)
  // console.log(process.env.API_LINK)
  return (
    <div>
      <Head>
        <title>Twitter 2.0</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <UserContext.Provider value={{ users, setUsers }}>
        <div className={styles.index__container}>
          <div className={styles.index__content}>
            <IndexPageHome />
          </div>
          <div className={styles.index__feeds}>
            <IndexPageFeed />
          </div>
        </div>
      </UserContext.Provider>


    </div>
  );
}

export default Home
